{"title":"Net-网络基础","uid":"a293d787cf7979f11b343b04086d0db9","slug":"net3","date":"2021-04-10T05:48:25.000Z","updated":"2022-05-05T05:56:51.271Z","comments":true,"path":"api/articles/net3.json","keywords":null,"cover":"https://tse1-mm.cn.bing.net/th/id/R-C.a6b35d0ceff922dbb8ca6678339670c7?rik=OzaOFa32Ojvp7w&riu=http%3a%2f%2fsrc.sotu114.com%2fdata%2fattachment%2fforum%2f202003%2f27%2f145613dpujyuu1v1pztjbd.item.jpg-ture&ehk=EyuUwO0luJ3fTRSq40kKShnm0d5Hwxdx3z56we%2fOoEM%3d&risl=&pid=ImgRaw&r=0","content":"<h2 id=\"TCP-x2F-IP体系知识\"><a href=\"#TCP-x2F-IP体系知识\" class=\"headerlink\" title=\"TCP&#x2F;IP体系知识\"></a>TCP&#x2F;IP体系知识</h2><h3 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h3><ul>\n<li><p>实际上是和应用打交道，是对相互通信进程之间交换的信息的一种规范</p>\n</li>\n<li><p>应用层协议：就是规定了交换信息的格式</p>\n<h4 id=\"具体协议\"><a href=\"#具体协议\" class=\"headerlink\" title=\"具体协议\"></a>具体协议</h4><ul>\n<li><p>HTTP协议</p>\n<ul>\n<li>用于web的一种协议</li>\n<li>请求格式</li>\n<li>响应格式</li>\n</ul>\n</li>\n<li><p>HTTPS</p>\n<ul>\n<li>HTTP+TLS</li>\n<li>TLS加密方式：<ul>\n<li>对称加密                   ：收发同时使用公钥进行加解密</li>\n<li>非对称加密                ： 公钥加密，私钥解密。而私钥只有自己知道   <strong>（耗费资源）</strong></li>\n</ul>\n</li>\n<li>加密过程     <ol>\n<li>首先通过非对称方式的到会话秘钥，这个秘钥只有收发两方知道</li>\n<li>在通过会话秘钥进行对称加密</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>DHCP协议</p>\n<ul>\n<li><p>动态主机配置协议</p>\n</li>\n<li><p>作用： <strong>动态的为主机配置ip，网关以及dns服务器地址</strong></p>\n</li>\n<li><p>配置类型</p>\n<ul>\n<li>手动配置</li>\n<li>自动配置</li>\n<li>动态配置</li>\n</ul>\n</li>\n<li><p>请求流程：（第一次分配）</p>\n<ol>\n<li><p>客户端发送DHCP_DICOVER</p>\n<ul>\n<li>发送广播，源ip为0.0.0.0（如果没有回应，依次以2 4 8 16）发送</li>\n<li>如果得到了地址就成功，没有得到会自己设置个临时地址，然后个5分钟广播一次</li>\n</ul>\n</li>\n<li><p>服务器发送DHCP_Offer</p>\n<ul>\n<li>此时服务器端仍然发送的是广播，但mac会封装对方的mac以及用XID编号进行封包</li>\n</ul>\n</li>\n<li><p>客户端发送DHCP_Request</p>\n<ul>\n<li>客户端对可能发来的多条offer选择一个，仍然以源ip为0.0.0.0 进行发送广播</li>\n</ul>\n</li>\n<li><p>服务器端DHCP_ACK</p>\n<ul>\n<li>服务器端对其进行确认</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>通过租约和续约来进行ip地址的请求</p>\n</li>\n<li><p>第n次登陆后，只需要发送DHCP—Request进行确认即可</p>\n</li>\n</ul>\n</li>\n<li><p>FTP</p>\n<ul>\n<li>文件传输协议</li>\n<li>具有两个TCP连接   21端口控制连接       20端口数据连接</li>\n<li>传输模式<ol>\n<li>主动传输</li>\n<li>被动传输</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>DNS</p>\n<ul>\n<li>查询过程<ul>\n<li>首先在电脑本地的缓存器查找</li>\n<li>再通过<strong>递归</strong>查询本地dns服务器</li>\n<li>本地dns服务器和其他服务器进行<strong>迭代</strong>查询</li>\n</ul>\n</li>\n<li>域名结构<ul>\n<li>顶级域名</li>\n<li>二级域名<ul>\n<li>每个分级的服务器都有缓存</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"运输层\"><a href=\"#运输层\" class=\"headerlink\" title=\"运输层\"></a>运输层</h3><ul>\n<li>连接端到端</li>\n</ul>\n<h4 id=\"TCP：6\"><a href=\"#TCP：6\" class=\"headerlink\" title=\"TCP：6\"></a>TCP：6</h4><ul>\n<li><p>个人理解：在网络传输的过程中，起到的类似于控制和规划的作用，让网络传输的效率达到最大</p>\n</li>\n<li><p>三次握手，四次挥手</p>\n</li>\n<li><p>TCP窗口</p>\n</li>\n<li><p>发送窗口影响机制（多包）</p>\n<ul>\n<li>接收窗口大小</li>\n<li>网络拥塞程度<ul>\n<li>该因素反应的是网络的堵塞程度，会有拥塞窗口来限制MSS</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>可靠传输</p>\n<ul>\n<li>利用滑动窗口机制，通过发送窗口和接收串口的反复确认来可靠传输</li>\n</ul>\n</li>\n<li><p>流量控制</p>\n<ul>\n<li><p>目的：防止接收方接收数据溢出</p>\n</li>\n<li><p>原理：</p>\n<p>通过滑动窗口机制进行流量控制</p>\n<p>主要是通过接收方的rwnd对发送方的发送窗口大小进行调整，从而不让发送方发送过快而导致接收方溢出</p>\n</li>\n</ul>\n</li>\n<li><p>拥塞控制</p>\n<ul>\n<li>原理：通过设置拥塞窗口的值来限制发送窗口的大小</li>\n<li>作用：让网络的吞吐量一直保持最大值</li>\n<li>算法：<ol>\n<li>慢开始</li>\n<li>拥塞避免</li>\n<li>快重传                  收到连续三个请求后，不会等待重传计数器的时间，直接发送报文段</li>\n<li>快恢复                  收到三个确认后吧慢门限减半</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"UDP：17\"><a href=\"#UDP：17\" class=\"headerlink\" title=\"UDP：17\"></a>UDP：17</h4><h4 id=\"TCP和UDP区别：\"><a href=\"#TCP和UDP区别：\" class=\"headerlink\" title=\"TCP和UDP区别：\"></a>TCP和UDP区别：</h4><ol>\n<li>TCP面向连接，UDP无连接</li>\n<li>TCP一对一，UDP支持一对一，一对多，多对一</li>\n<li>TCP是面向字节流，UDP是直接封装头部</li>\n<li>TCP可靠，UDP不可靠</li>\n<li>TCP首部20到60字节，UDP只有8个字节</li>\n</ol>\n<h3 id=\"网络层-：\"><a href=\"#网络层-：\" class=\"headerlink\" title=\"网络层  ：\"></a>网络层  ：</h3><ul>\n<li>通过IP地址实现各个网络的互联</li>\n</ul>\n<h4 id=\"路由器\"><a href=\"#路由器\" class=\"headerlink\" title=\"路由器\"></a>路由器</h4><ul>\n<li>功能<ul>\n<li>路由选择<ul>\n<li>通过相关协议的选择，rip，ospf，bgp等实现相关路由的计算得出路由表</li>\n</ul>\n</li>\n<li>功能转发<ul>\n<li>通过查找路由表对相关数据包进行转发</li>\n</ul>\n</li>\n<li>路由表： 目的网络   下一跳      接口    度量值</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ICMP（网际控制报文协议）\"><a href=\"#ICMP（网际控制报文协议）\" class=\"headerlink\" title=\"ICMP（网际控制报文协议）\"></a>ICMP（网际控制报文协议）</h4><ul>\n<li><p>干什么：用来发送<strong>差错报告报文和询问报文</strong></p>\n</li>\n<li><p>差错报文分类</p>\n</li>\n<li><p>询问报文：</p>\n<ol>\n<li>回送请求和回答</li>\n<li>时间戳请求和回答</li>\n</ol>\n</li>\n<li><p>应用</p>\n<ol>\n<li>ping<ul>\n<li>ping的使用<ol>\n<li>检查网络的连通性</li>\n<li>检查网络连通的质量（拥塞程度）<ul>\n<li>可以 ping  -t   一直对目标网络进行测试，查看网络情况，比如看网络的拥塞程度和连接程度</li>\n</ul>\n</li>\n<li>判断目的主机的系统类型，因此一般TTL值：<ul>\n<li>100~130ms之间，Windows系统 ；</li>\n<li>240~255ms之间，UNIX&#x2F;Linux系统。</li>\n</ul>\n</li>\n<li>ping -r 显示出路径</li>\n<li>ping -n 设置平均发送的包</li>\n<li>ping -l 6550 设置ping发的包的大小</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>tracert<ul>\n<li>原理：通过逐次增加报文的ttl时间然后通过差错返回报文进行判断</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"ARP\"><a href=\"#ARP\" class=\"headerlink\" title=\"ARP\"></a>ARP</h4><ul>\n<li>是什么<ul>\n<li>地址解析协议（Address Resolution Protocol）    通过ip地址来解析mac地址</li>\n</ul>\n</li>\n<li>分类<ul>\n<li>静态            手动配置</li>\n<li>动态            自动更新配置</li>\n</ul>\n</li>\n<li>免费arp<ul>\n<li>主要是发送自己的ip地址来获得自己的mac地址</li>\n<li>作用<ol>\n<li>系统引导时的更新配置</li>\n<li><strong>检测局域网内是否发生了ip冲突</strong></li>\n<li>更新其他主机的缓存表</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>代理arp<ul>\n<li>主机没有配置网关时，来自路由器的善意欺骗，返回的mac地址是路由器的mac地址</li>\n<li>主要是针对于没有配置网关的电脑实现路由互通</li>\n<li>当主机有网关时，发现目标ip不在同一个网段，会直接封装网关的mac地址</li>\n<li>总结：<strong>代理arp和正常arp主要是使用场景的差别</strong><ul>\n<li>电脑没有网关时，ARP直接询问目标IP对应的MAC地址（跨网段），采用代理ARP；</li>\n<li>电脑有网关时，ARP只需询问网关IP对应的MAC地址（同网段），采用正常ARP；</li>\n<li>无论是正常ARP还是代理ARP，电脑最终都拿到同一个目标MAC地址：网关MAC。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>arp攻击<ul>\n<li>本质是一种欺骗，<strong>中间人攻击</strong>  原则是  <strong>后到优先</strong></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h4><ul>\n<li><p>是什么？</p>\n<ul>\n<li><strong>防火墙</strong>是一种<strong>安全设备</strong>，保护一个网络区域免受另一个网络区域的攻击和入侵，通常被部署在网络边界，例如：企业互联网出口；</li>\n</ul>\n</li>\n<li><p>作用：</p>\n<ul>\n<li><p>基本功能 （狭义的防火墙）</p>\n<p><strong>区域隔离和访问控制</strong> （<strong>访问控制可以产生会话</strong>）           路由器虽然也有基本的功能，但是不够强大</p>\n</li>\n<li><p>扩展功能   （广义的防火墙）</p>\n<p>文件过滤，内容过滤，入侵防御isp  —————–但是这些功能对于防火墙开销比较大</p>\n</li>\n</ul>\n</li>\n<li><p>安全区域：</p>\n<ul>\n<li>通过将防火墙<strong>不同端口</strong>连接不同网络来划分安全区域，提高了隔离性，从而增加了安全性</li>\n<li>默认分类：<ol>\n<li>受信区域                           不需要通过检测</li>\n<li>非受信区域            </li>\n<li>非军事化区域（公共互联网区域）</li>\n<li>本地区域（local）</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>匹配策略：</p>\n<ul>\n<li><p>安全策略由<strong>匹配条件、动作</strong>组成 </p>\n</li>\n<li><p>匹配条件：</p>\n<ul>\n<li>五元组（源地址、目的地址、源端口、目的端口、协议）</li>\n<li>目的安全区域、用户、时间段等</li>\n</ul>\n</li>\n<li><p>动作</p>\n<ul>\n<li>拒绝</li>\n<li>通过</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>会话表</strong></p>\n<ul>\n<li>作用：记录协议连接状态</li>\n<li>理解：比如tcp三次握手连接等情况，如果每次都进行匹配策略以及其他的流程检测，则会大大降低效率，所以通过首包建立会话表来记录连接状态</li>\n<li>会话表老化时间<ul>\n<li>若会话表长时间不匹配，则会占用防火墙资源，所以超过老化时间会自动清理会话表</li>\n<li>但是：<strong>想FTP等协议报文间隔时间较长，则会设置长连接避免会话表被删除</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"NAT\"><a href=\"#NAT\" class=\"headerlink\" title=\"NAT\"></a>NAT</h4><ul>\n<li>是什么：<ul>\n<li>是一种ip地址转换技术，用于ip地址枯竭问题</li>\n</ul>\n</li>\n<li>作用：<ol>\n<li>节约了ip地址</li>\n<li><strong>提高了安全性</strong>，隐藏了内网地址</li>\n</ol>\n</li>\n<li>分类<ul>\n<li>静态NAT   （内外网ip地址一对一转换，没有解决地址紧缺的问题）</li>\n<li>动态NAT     （通过创建IP地址池，使用时利用池里面的ip地址池进行匹配，一定程度上的缓解紧缺问题）</li>\n<li>NAPT    （利用ip地址和端口进行转换，做到了一对多的形式，解决了地址紧缺问题）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h3><h4 id=\"交换机\"><a href=\"#交换机\" class=\"headerlink\" title=\"交换机\"></a>交换机</h4><ul>\n<li>作用：<ol>\n<li>汇聚</li>\n<li>隔离冲突域</li>\n<li>寻址和转发</li>\n</ol>\n</li>\n<li>mac表的自学习过程<ul>\n<li>通过将接受的数据帧的端口与源mac地址进行关联</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"链路聚合\"><a href=\"#链路聚合\" class=\"headerlink\" title=\"链路聚合\"></a>链路聚合</h4><ul>\n<li><p>定义理解: 将多条链路聚合为一条逻辑链路。</p>\n</li>\n<li><p>基本概念：</p>\n<ol>\n<li>链路聚合组（LAG）</li>\n<li>Eth-trunk（链路聚合组接口）</li>\n<li>成员接口<ul>\n<li>活动接口<strong>（提供了带宽）</strong></li>\n<li>非活动接口<strong>（提供了冗余可靠性）</strong></li>\n</ul>\n</li>\n<li>成员链路</li>\n</ol>\n</li>\n<li><p>优点：</p>\n<ol>\n<li>增加带宽</li>\n<li>增加可靠性</li>\n<li>负载均衡</li>\n</ol>\n</li>\n<li><p>设备的链路聚合方式：</p>\n<ul>\n<li>同一设备</li>\n<li>堆叠设备</li>\n<li>跨设备（基于LACP模式）</li>\n</ul>\n</li>\n<li><p>聚合模式：</p>\n<ul>\n<li><p>手动聚合： 就是用手工来配置         <strong>（只能解决断路等简单故障）</strong></p>\n<ul>\n<li>全部链路进行流量分发</li>\n</ul>\n</li>\n<li><p>LACP                                                   <strong>（可以动态的解决更多链路故障）</strong></p>\n<ul>\n<li><p>链路聚合控制协议 LACP </p>\n<ul>\n<li>理解：就是动态的维护链路状态</li>\n</ul>\n</li>\n<li><p>优先级：</p>\n<ol>\n<li><p>系统优先级： 因为接口两端要相同，所以以优先级高的为接口标准，优先级低的同步优先级高的接口，以优先级高的为模板</p>\n<p>，数字越大，优先级越小</p>\n</li>\n<li><p>接口优先级：成员接口的优先级越高，优先被选为活动接口。（数值越大，优先级越低）</p>\n</li>\n</ol>\n</li>\n<li><p>M：N备份</p>\n<ul>\n<li>M个活动链路，N个非活动接口</li>\n</ul>\n</li>\n<li><p>实现原理：</p>\n<ul>\n<li>通过交换链路聚合控制协议数据单元LACPDU与对端交互信息，确定聚合端口</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","text":"TCP&#x2F;IP体系知识应用层 实际上是和应用打交道，是对相互通信进程之间交换的信息的一种规范 应用层协议：就是规定了交换信息的格式 具体协议 HTTP协议 用于web的一种协议 请求格式 响应格式 HTTPS HTTP+TLS TLS加密方式： 对称加密 ：收发同时使用公...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Net","slug":"Net","count":4,"path":"api/categories/Net.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TCP-x2F-IP%E4%BD%93%E7%B3%BB%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">TCP&#x2F;IP体系知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%B1%82\"><span class=\"toc-text\">应用层</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">具体协议</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%BE%93%E5%B1%82\"><span class=\"toc-text\">运输层</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#TCP%EF%BC%9A6\"><span class=\"toc-text\">TCP：6</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#UDP%EF%BC%9A17\"><span class=\"toc-text\">UDP：17</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#TCP%E5%92%8CUDP%E5%8C%BA%E5%88%AB%EF%BC%9A\"><span class=\"toc-text\">TCP和UDP区别：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%B1%82-%EF%BC%9A\"><span class=\"toc-text\">网络层  ：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E5%99%A8\"><span class=\"toc-text\">路由器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ICMP%EF%BC%88%E7%BD%91%E9%99%85%E6%8E%A7%E5%88%B6%E6%8A%A5%E6%96%87%E5%8D%8F%E8%AE%AE%EF%BC%89\"><span class=\"toc-text\">ICMP（网际控制报文协议）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ARP\"><span class=\"toc-text\">ARP</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%98%B2%E7%81%AB%E5%A2%99\"><span class=\"toc-text\">防火墙</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#NAT\"><span class=\"toc-text\">NAT</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82\"><span class=\"toc-text\">数据链路层</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%A4%E6%8D%A2%E6%9C%BA\"><span class=\"toc-text\">交换机</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88\"><span class=\"toc-text\">链路聚合</span></a></li></ol></li></ol></li></ol>","author":{"name":"Hubert","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"This is my own blog to     share my knowledge","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Java-面对对象","uid":"a64196a02ebbcb9126814b321ce99582","slug":"java2","date":"2021-04-11T05:48:25.000Z","updated":"2022-05-05T05:51:11.165Z","comments":true,"path":"api/articles/java2.json","keywords":null,"cover":"https://tse3-mm.cn.bing.net/th/id/OIP-C.1Z2MHtWto46_PjbpOCqlwQHaEK?pid=ImgDet&rs=1","text":"面对对象类 方法 方法的参数传递问题 传递基本数据类型和引用数据类型的区别 传递可变参数 方法的重载 就是相同的方法中，只有参数不同，从而匹配不同的同名方法。 构造方法（构造器） 注意会默认调用父类的构造器，所以子类在实例化的时候要注意 抽象类 理解：因为类可以被继承，并且子类可...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[],"author":{"name":"Hubert","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"This is my own blog to     share my knowledge","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Net-路由协议","uid":"6680b6536ab34550098dc51e7750bdac","slug":"net1","date":"2021-04-08T05:48:25.000Z","updated":"2022-05-05T05:56:29.750Z","comments":true,"path":"api/articles/net1.json","keywords":null,"cover":"https://tse1-mm.cn.bing.net/th/id/R-C.a6b35d0ceff922dbb8ca6678339670c7?rik=OzaOFa32Ojvp7w&riu=http%3a%2f%2fsrc.sotu114.com%2fdata%2fattachment%2fforum%2f202003%2f27%2f145613dpujyuu1v1pztjbd.item.jpg-ture&ehk=EyuUwO0luJ3fTRSq40kKShnm0d5Hwxdx3z56we%2fOoEM%3d&risl=&pid=ImgRaw&r=0","text":"路由协议总述 动态路由协议 IGP（内部网关协议） 主要为路由发现和计算 RIP OSPF EGP（外部网关协议） 主要为路由选择和控制 BGP EBGP IBGP OSPF： 开放最短路径优先，IP传输，使用的协议号为89 因为是采用了IP协议传输，所以OSPF在网络层来看本身...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Net","slug":"Net","count":4,"path":"api/categories/Net.json"}],"tags":[],"author":{"name":"Hubert","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"This is my own blog to     share my knowledge","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}