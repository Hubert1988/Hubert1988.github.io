{"title":"Net-OSPF之负载均衡","uid":"0df63ec25452415f0b2c8961aba42a85","slug":"net4","date":"2021-08-02T05:48:25.000Z","updated":"2022-05-05T05:56:59.601Z","comments":true,"path":"api/articles/net4.json","keywords":null,"cover":"https://tse1-mm.cn.bing.net/th/id/R-C.a6b35d0ceff922dbb8ca6678339670c7?rik=OzaOFa32Ojvp7w&riu=http%3a%2f%2fsrc.sotu114.com%2fdata%2fattachment%2fforum%2f202003%2f27%2f145613dpujyuu1v1pztjbd.item.jpg-ture&ehk=EyuUwO0luJ3fTRSq40kKShnm0d5Hwxdx3z56we%2fOoEM%3d&risl=&pid=ImgRaw&r=0","content":"<p>这篇内容主要为了解，具体的功能技术实现自己并未动手操作，但是这篇内容最大的启示是ospf的功能不仅仅是AS内的发现和计算路由，还有其他功能，我们学习一种技术时不能局限于技术本身，而是要善用技术，这样才能真正理解相关技术，从而做到融会贯通</p>\n<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a>概述：</h2><ul>\n<li><p>关于ospf：</p>\n<ul>\n<li>​      OSPF(Open Shortest Path First开放式最短路径优先 )是一个<strong>内部网关协议</strong>，用于在单一自治系统(AS)内决策路由。OSPF通过路由器之间通告网络接口的状态来建立链路状态数据库，生成最短路径树，每个OSPF路由器使用这些最短路径构造路由表。 OSPF路由协议用于在单一自治系统内决策路由。 OSPF通过路由器之间通告网络接口的状态来建立链路状态数据库，生成最短路径树，每个OSPF路由器使用这些最短路径构造路由表。 OSPF路由协议是一种典型的链路状态路由协议，一般用于同一个路由域内。在这里，路由域是是指一组通过统一的路由政策或路由协议互相交换路由信息的网络。在这个AS中，所有的OSPF路由器都维护一个相同的描述这个 AS结构的数据库，该数据库中存放的是路由域中相应链路的状态信息，OSPF路由器正是通过这个数据库计算出其OSPF路由表的。</li>\n</ul>\n</li>\n<li><p>关于负载均衡</p>\n<ul>\n<li>个人理解的负载均衡是一种 “<strong>压力分担</strong>”，是一种横向的扩展，而自己了解的负载均衡技术分类可以分为两种</li>\n<li>平台分类<ul>\n<li>硬件<ul>\n<li>思科的一些设备（IP+端口）</li>\n</ul>\n</li>\n<li>软件<ul>\n<li>HTTP重定向</li>\n<li>DNS重定向</li>\n<li>反向代理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>网络层分类<ul>\n<li>四层： <ul>\n<li>IP+端口</li>\n</ul>\n</li>\n<li>七层：<ul>\n<li>基于一些软件，比如nginx等等</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>结合：</p>\n<p><strong>负载均衡可以从多方面实现，而ospf作为AS内一个重要的路由协议，基本承载了三层的流量，所以在OSPF上也可以设计负载均衡</strong></p>\n</li>\n</ul>\n<h2 id=\"核心思想\"><a href=\"#核心思想\" class=\"headerlink\" title=\"核心思想\"></a>核心思想</h2><ul>\n<li>ospf的最大的特点是基于链路状态，而链路状态实际上是一种网路开销的体现，而OSPF会根据链路状态计算路由，<strong>到达目标相同Cost值的路径，可以执行负载均衡</strong> <ul>\n<li>简单的说就是到达一个目的地有很多条路，每条路的开销相同，因此流量也可以进行相应的负载均衡</li>\n</ul>\n</li>\n<li>OSPF的负载均衡只是一方面，通常要和其他技术搭配使用</li>\n</ul>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><ul>\n<li>OSPF负载均衡一般与其他负载均衡一起搭建成负载均衡集群，提供高可用、高负载服务。 </li>\n<li>OSPF+LVS-DR集群</li>\n</ul>\n","text":"这篇内容主要为了解，具体的功能技术实现自己并未动手操作，但是这篇内容最大的启示是ospf的功能不仅仅是AS内的发现和计算路由，还有其他功能，我们学习一种技术时不能局限于技术本身，而是要善用技术，这样才能真正理解相关技术，从而做到融会贯通 概述： 关于ospf： ​ OSPF(Op...","link":"","photos":[],"count_time":{"symbolsCount":972,"symbolsTime":"1 mins."},"categories":[{"name":"Net","slug":"Net","count":4,"path":"api/categories/Net.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">概述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">核心思想</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">使用场景</span></a></li></ol>","author":{"name":"Hubert","slug":"blog-author","avatar":"https://tse2-mm.cn.bing.net/th/id/OIP-C.HOHe3l1T_0UEexBraXs53wAAAA?w=169&h=176&c=7&r=0&o=5&dpr=1.38&pid=1.7","link":"/","description":"<h5>This is my own blog to     share my knowledge</h5>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"K8s","uid":"8b277fff122412f48b0619581df54238","slug":"K8s1","date":"2021-08-26T10:49:36.000Z","updated":"2022-05-05T11:54:05.126Z","comments":true,"path":"api/articles/K8s1.json","keywords":null,"cover":"https://pic4.zhimg.com/v2-562267b2cf39fded4c66640ac37ee818_1440w.jpg?source=172ae18b","text":"K8s概述前置知识 容器的本质是一种特殊的进程 容器的隔离和资源限制实现 namespace 相当于一个障眼法，利用linux的namespace机制实现隔离，而一个个docker实际上是一个个特殊的进程 Namespace 技术实际上修改了应用进程看待整个计算机“视 图”，即它...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"K8s","slug":"K8s","count":4,"path":"api/categories/K8s.json"}],"tags":[],"author":{"name":"Hubert","slug":"blog-author","avatar":"https://tse2-mm.cn.bing.net/th/id/OIP-C.HOHe3l1T_0UEexBraXs53wAAAA?w=169&h=176&c=7&r=0&o=5&dpr=1.38&pid=1.7","link":"/","description":"<h5>This is my own blog to     share my knowledge</h5>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"Docker","uid":"a48e6dda0c21e40880cba7e763278b04","slug":"docker","date":"2021-05-16T05:48:25.000Z","updated":"2022-05-05T05:54:00.706Z","comments":true,"path":"api/articles/docker.json","keywords":null,"cover":"https://pic4.zhimg.com/v2-68b55eca7e54ac6b7e3dae441e193827_720w.jpg?source=172ae18b","text":"Docker概述 是什么 是一款容器引擎，是一个用于开发，交付和运行应用程序的开放平台 作用 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 （应用和相关依赖环境一起打包到容器当中）解决...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"Docker","slug":"Docker","count":1,"path":"api/categories/Docker.json"}],"tags":[],"author":{"name":"Hubert","slug":"blog-author","avatar":"https://tse2-mm.cn.bing.net/th/id/OIP-C.HOHe3l1T_0UEexBraXs53wAAAA?w=169&h=176&c=7&r=0&o=5&dpr=1.38&pid=1.7","link":"/","description":"<h5>This is my own blog to     share my knowledge</h5>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}